---
const features = [
  {
    id: 'feature-1',
    name: 'Instant Dataset Creation',
    description: 'Remove the bottleneck of dataset preparation. Our platform lets you create customized datasets quickly, allowing you to focus on innovation rather than tedious setup tasks.',
    icon: 'ri-database-2-line'
  },
  {
    id: 'feature-2',
    name: 'Advanced Data Augmentation',
    description: 'Enhance your modelâ€™s performance by seamlessly adding diverse and relevant data. Prevent model failures caused by data scarcity and improve overall prediction accuracy.',
    icon: 'ri-edit-box-line'
  },
  {
    id: 'feature-3',
    name: 'Effortless Dataset Editing',
    description: 'Evolve your datasets as your project grows. Modify data on-the-go to adapt to new insights and changing requirements, ensuring your models stay relevant and high-performing.',
    icon: 'ri-edit-line'
  },
  {
    id: 'feature-4',
    name: 'Unified Data Management with Snowflake',
    description: 'Break down data silos and improve collaboration. Integrating with Snowflake allows seamless access to all your data, facilitating better data-driven decisions and more cohesive team efforts.',
    icon: 'ri-cloud-line'
  },
  {
    id: 'feature-5',
    name: 'Enhanced Scalability with Databricks',
    description: 'Overcome the challenges of scaling data processing. Our Databricks integration ensures your machine learning workflows can handle massive datasets efficiently, so you never have to worry about outgrowing your tools.',
    icon: 'ri-database-line'
  },
  {
    id: 'feature-6',
    name: 'Seamless SQL Database Connectivity',
    description: 'Integrate without disruption. Connect effortlessly to your existing SQL databases, leveraging familiar tools and infrastructure to maintain continuity and accelerate model deployment.',
    icon: 'ri-database-2-line'
  },
  {
    id: 'feature-7',
    name: 'Real-Time Automation with Webhooks',
    description: 'Ensure your models stay current with real-time data. Custom webhooks automate updates and notifications, integrating your ML models with dynamic data streams for continuous, up-to-date performance.',
    icon: 'ri-link-line'
  },
];
---

<section class="py-16 sm:py-20">
  <div class="mx-auto max-w-2xl px-4 sm:px-6 lg:max-w-7xl lg:px-8">
    <div class="grid gap-12 lg:grid-cols-3 lg:gap-8">
      <h2 class="text-3xl font-medium tracking-tight sm:text-4xl">Key Features</h2>
      <div class="lg:col-span-2">
        <dl
          class="-mt-3"
          x-data="{ selected: null, toggle(value) { this.selected = this.selected === value ? null : value } }"
        >
          {features.map((feature, index) => (
            <div
              key={feature.id}
              class="rounded-3xl px-4 transition"
              x-data={`{ id: ${index}, get isOpen() { return this.id === this.selected }, get isNextOpen() { return (this.id + 1) === this.selected } }`}
              x-bind:class="{ 'bg-primary-500/10 dark:bg-primary-400/10': isOpen }"
            >
              <dt
                class="border-b text-lg transition"
                x-cloak
                x-bind:class="{ 'border-transparent': isOpen || isNextOpen, 'border-primary-900/10 dark:border-primary-300/10': !(isOpen || isNextOpen) }"
              >
                <button
                  type="button"
                  class="group block w-full py-6 text-left transition focus-visible:outline-none"
                  aria-controls={feature.id}
                  x-on:click="toggle(id)"
                  aria-expanded="false"
                  x-bind:aria-expanded="isOpen.toString()"
                >
                  <div class="group-focus-visible:outline-primary-950 dark:group-focus-visible:outline-primary-200 flex items-center justify-between rounded-3xl group-focus-visible:outline group-focus-visible:outline-2 group-focus-visible:outline-offset-2">
                    <span class="font-medium flex items-center">
                      <i class={`${feature.icon} mr-6`} style="font-size: 1.4rem"></i>
                      {feature.name}
                    </span>
                    <span class="ml-6 flex h-7 items-center">
                      <svg
                        class="text-primary-600 dark:text-primary-400 h-6 w-6 rotate-0 transform transition duration-200 ease-in-out"
                        x-bind:class="{ '-rotate-180': isOpen, 'rotate-0': !isOpen }"
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 24 24"
                        fill="currentColor"
                        aria-hidden="true"
                      >
                        <path d="M11.9997 13.1714L16.9495 8.22168L18.3637 9.63589L11.9997 15.9999L5.63574 9.63589L7.04996 8.22168L11.9997 13.1714Z" />
                      </svg>
                    </span>
                  </div>
                </button>
              </dt>
              <dd class="pb-6 pr-6" id={feature.id} x-show="isOpen" x-cloak x-collapse>
                <p class="text-primary-950/70 dark:text-primary-200/70 text-base">
                  {feature.description}
                </p>
              </dd>
            </div>
          ))}
        </dl>
      </div>
    </div>
  </div>
</section>
